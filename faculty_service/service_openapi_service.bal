// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;

# Represents an error
public type Error record {
    # Error code
    string code;
    # Error message
    string message;
};

# Represents a lecturer
public type Lecturer record {
    # Staff Number (Unique identifier)
    readonly string staffNumber;
    # Office Number
    string officeNumber;
    # Staff Name
    string staffName;
    # Title
    string title;
    # List of Courses
    Course[] courses;
};

# Represents a course
public type Course record {
    # Course Code (Unique identifier)
    readonly string courseCode;
    # Course Name
    string courseName;
    # NQF Level
    string nqfLevel;
};

# Error response
public type ErrorResponse record {
    # Represents an error
    Error 'error;
};

# Bad request response
public type ValidationError record {|
    *http:BadRequest;
    # Error response.
    ErrorResponse body;
|};

# Represents headers of created response
public type LocationHeader record {|
    # Location header. A link to the created resource.
    string location;
|};

# Resource Created response
public type ResourceCreated record {|
    *http:Created;
    # Location header representing a link to the created resource.
    LocationHeader headers;
|};

# Resource updated response
public type ResourceUpdated record {|
    *http:Ok;
|};

# Tables for storing Lecturers & Courses
table<Lecturer> key(staffNumber) lecturersTable = table [];
table<Course> key(courseCode) courseTable = table [];

listener http:Listener ep0 = new (8080, config = {host: "localhost"});

service / on ep0 {
    # 
    #
    # + return - Ok 
    resource function get lecturers() returns Lecturer[] {
    }
    # 
    #
    # + payload - parameter description 
    # + return - returns can be any of following types
    # http:Created (Created)
    # BadRequestErrorResponse (BadRequest)
    resource function post lecturers(@http:Payload Lecturer payload) returns http:Created|BadRequestErrorResponse {
    }
    # 
    #
    # + staffNumber - parameter description 
    # + return - returns can be any of following types
    # Lecturer (Ok)
    # BadRequestErrorResponse (BadRequest)
    resource function get lecturers/[string staffNumber]() returns Lecturer|BadRequestErrorResponse {
    }
    # 
    #
    # + staffNumber - parameter description 
    # + payload - parameter description 
    # + return - returns can be any of following types
    # http:Ok (Ok)
    # BadRequestErrorResponse (BadRequest)
    resource function put lecturers/[string staffNumber](@http:Payload Lecturer payload) returns http:Ok|BadRequestErrorResponse {
    }
    # 
    #
    # + staffNumber - parameter description 
    # + return - returns can be any of following types
    # Lecturer (Ok)
    # BadRequestErrorResponse (BadRequest)
    resource function delete lecturers/[string staffNumber]() returns Lecturer|BadRequestErrorResponse {
    }
    # 
    #
    # + officeNumber - parameter description 
    # + return - Ok 
    resource function get lecturers/office/[string officeNumber]() returns Lecturer[] {
    }
    # 
    #
    # + return - Ok 
    resource function get courses() returns Course[] {
    }
    # 
    #
    # + payload - parameter description 
    # + return - returns can be any of following types
    # http:Created (Created)
    # BadRequestErrorResponse (BadRequest)
    resource function post courses(@http:Payload Course payload) returns http:Created|BadRequestErrorResponse {
    }
    # 
    #
    # + courseCode - parameter description 
    # + return - returns can be any of following types
    # Course (Ok)
    # BadRequestErrorResponse (BadRequest)
    resource function get courses/[string courseCode]() returns Course|BadRequestErrorResponse {
    }
    # 
    #
    # + courseCode - parameter description 
    # + payload - parameter description 
    # + return - returns can be any of following types
    # http:Ok (Ok)
    # BadRequestErrorResponse (BadRequest)
    resource function put courses/[string courseCode](@http:Payload Course payload) returns http:Ok|BadRequestErrorResponse {
    }
    # 
    #
    # + courseCode - parameter description 
    # + return - returns can be any of following types
    # Course (Ok)
    # BadRequestErrorResponse (BadRequest)
    resource function delete courses/[string courseCode]() returns Course|BadRequestErrorResponse {
    }
}
